class Task:
    def __init__(self, description, complete=False):
        self.description = description
        self.complete = complete

class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, description):
        new_task = Task(description)
        self.tasks.append(new_task)
        print(f'Task added: {description}')

    def list_tasks(self):
        if not self.tasks:
            print("No tasks in the to-do list.")
        else:
            print("To-Do List:")
            for index, task in enumerate(self.tasks, start=1):
                status = "Complete" if task.complete else "Incomplete"
                print(f'{index}. {task.description} - {status}')

    def mark_complete(self, task_index):
        if 1 <= task_index <= len(self.tasks):
            task = self.tasks[task_index - 1]
            task.complete = True
            print(f'Task marked as complete: {task.description}')
        else:
            print("Invalid task index")

def main():
    todo_list = ToDoList()

    while True:
        print("\nOptions:")
        print("1. Add Task")
        print("2. List Tasks")
        print("3. Mark Task as Complete")
        print("4. Quit")

        choice = input("Enter your choice (1/2/3/4): ")

        if choice == '1':
            description = input("Enter task description: ")
            todo_list.add_task(description)
        elif choice == '2':
            todo_list.list_tasks()
        elif choice == '3':
            task_index = int(input("Enter task index to mark as complete: "))
            todo_list.mark_complete(task_index)
        elif choice == '4':
            print("Exiting the To-Do List application. Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a valid option.")

if __name__ == "__main__":
    main()
